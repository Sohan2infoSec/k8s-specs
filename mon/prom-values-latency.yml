server:
  global:
    scrape_interval: 30s
    scrape_timeout: 20s
  ingress:
    enabled: true
    annotations:
      ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
  resources:
    limits:
      cpu: 100m
      memory: 1000Mi
    requests:
      cpu: 10m
      memory: 500Mi
alertmanager:
  ingress:
    enabled: true
    annotations:
      ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
  resources:
    limits:
      cpu: 10m
      memory: 20Mi
    requests:
      cpu: 5m
      memory: 10Mi
kube-state-metrics:
  image:
    tag: v2.2.4
  resources:
    limits:
      cpu: 10m
      memory: 50Mi
    requests:
      cpu: 5m
      memory: 25Mi
nodeExporter:
  resources:
    limits:
      cpu: 10m
      memory: 20Mi
    requests:
      cpu: 5m
      memory: 10Mi
pushgateway:
  resources:
    limits:
      cpu: 10m
      memory: 20Mi
    requests:
      cpu: 5m
      memory: 10Mi
serverFiles:
  alerts:
    groups:
    - name: latency
      rules:
      - alert: TooManyRequests
        expr: sum(rate(nginx_ingress_controller_requests[2m])) by (ingress) / sum(label_join(kube_deployment_status_replicas, 'ingress', ',', 'deployment')) by (ingress) > 0.5
        labels:
          severity: notify
        annotations:
          summary: Too many requests
          description: There is more than avg of 1 req / s / replica for at least one app
  
      - alert: AppTooSlow
        expr: sum(rate(nginx_ingress_controller_request_duration_seconds_bucket{le="0.25",ingress!~'prometheus.+'}[2m])) by (ingress) / sum(rate(nginx_ingress_controller_request_duration_seconds_count{ingress!~'prometheus.+'}[2m])) by (ingress) < 0.95
        labels:
          severity: notify
        annotations:
          summary: Application is too slow
          description: More then 5% of requests are slower than 0.25s


    - name: nodes
      rules:
      - alert: TooManyNodes
        expr: count(kube_node_info) > 4
        for: 1m
        labels:
          severity: notify
        annotations:
          summary: Cluster increased
          description: The number of the nodes in the cluster increased
      - alert: TooFewNodes
        expr: count(kube_node_info) < 1
        for: 1m
        labels:
          severity: notify
        annotations:
          summary: Cluster decreased
          description: The number of the nodes in the cluster decreased
      ## CPU
      - alert: NotEnoughCPU
        expr: sum(rate(node_cpu_seconds_total{mode!="idle", mode!="iowait", mode!~"^(?:guest.*)$"}[5m])) / count(node_cpu_seconds_total{mode="system"}) > 0.7
        for: 30m
        labels:
          severity: notify
        annotations:
          summary: There's not enough CPU
          description: CPU usage of the cluster is above 90%
      ## Memory
      - alert: NotEnoughMemory
        expr: 1 - sum(node_memory_MemAvailable_bytes) / sum(node_memory_MemTotal_bytes) > 0.85
        for: 30m
        labels:
          severity: notify
        annotations:
          summary: There's not enough memory
          description: Memory usage of the cluster is above 80%
      - alert: TooMuchMemoryRequested
        expr: sum(kube_pod_container_resource_requests{resource='memory', unit='byte'}) / sum(kube_node_status_allocatable{unit='byte', resource='memory'}) > 0.85
        for: 30m
        labels:
          severity: notify
        annotations:
          summary: There's not enough allocatable memory
          description: More than 85% of allocatable memory is requested

    - name: errors
      rules:
      - alert: TooManyErrors
        expr: sum(rate(nginx_ingress_controller_requests{status=~"5.."}[2m])) by (ingress) / sum(rate(nginx_ingress_controller_requests[2m])) by (ingress) > 0.025
        labels:
          severity: error
        annotations:
          summary: Too many errors
          description: At least one application produced more then 2.5% of error responses
alertmanagerFiles:
  alertmanager.yml:
    global: {}
    route:
      group_by: ['...']
      group_wait: 10s
      group_interval: 1m
      receiver: slack
      repeat_interval: 3h
      routes:
      - receiver: slack
        repeat_interval: 3m
        match:
          severity: notify
          frequency: low
    receivers:
    - name: slack
      webhook_configs:
      - url: 'http://localhost:9087/alert/-732854917'
      slack_configs:
      - api_url: "https://hooks.slack.com/services/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"
        send_resolved: true
        username: "prom-snn"
        title: |-
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
          {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
            {{" "}}(
            {{- with .CommonLabels.Remove .GroupLabels.Names }}
              {{- range $index, $label := .SortedPairs -}}
                {{ if $index }}, {{ end }}
                {{- $label.Name }}="{{ $label.Value -}}"
              {{- end }}
            {{- end -}}
            )
          {{- end }}
        text: >-
          {{ with index .Alerts 0 -}}
            :chart_with_upwards_trend: *<{{ .GeneratorURL }}|Graph>*
            {{- if .Annotations.runbook }}   :notebook: *<{{ .Annotations.runbook }}|Runbook>*{{ end }}
          {{ end }}
          *Alert details*:
          {{ range .Alerts -}}
            *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
          *Description:* {{ .Annotations.description }}
          *Details:*
            {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
        title_link: http://mon.61.28.237.69.nip.io/alerts
  config.yaml:
    telegram_token: "1353281510:AAHaZN2AXFE1ZBUj7qhTk0r9l-hW_y7yK_Q"
    template_path: "/etc/config/template.yaml"
    time_zone: "Asia/Ho_Chi_Minh"
    split_token: "|"
    time_outdata: "02/01/2006 15:04:05"
    split_msg_byte: 10000
  template.yaml: |-
    {{if eq .Status "firing"}}
    Status: <b>{{.Status | str_UpperCase}}</b>
    {{end -}}
    {{if eq .Status "resolved"}}
    Status: <b>{{.Status | str_UpperCase}}</b>
    {{end }}
    <b>Active Alert List:</b>
    {{- range $val := .Alerts }}
      Alert: <a href="{{ $val.GeneratorURL }}">{{ index $val.Annotations "summary" }}</a>
      {{$severity := index $val.Labels "severity" -}}
      {{if eq $severity "Warning" -}}
      Severity: {{$severity}} �~Z| �~O
      {{else -}}
      Severity: {{$severity}}
      {{ end -}}
      Active from: {{ $val.StartsAt | str_FormatDate }}
      {{ range $key, $value := $val.Annotations -}}
        {{ if and (and (ne $key "name") (ne $key "value")) (ne $key "measureUnit") }}
      {{$key}}: {{$value}}
        {{- end -}}
      {{- end -}}
    {{- end -}}
